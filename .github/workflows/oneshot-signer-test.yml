name: oneshot-signer-test
 
on: 
  push:   
    branches: [ 'github-workflow' ]   
env: 
  RUN_ID: ${{ github.run_id }}  
  BUILD_BRANCH: '5.2.0' 
  BUILD_TYPE: 'FULL'
  BUILD_REPO: 'nightly'
 
jobs:
       
  build-project:

 
    runs-on: ubuntu-latest

    steps:
            
        - name: Check out Repo
          uses: actions/checkout@v4  
          
        - name: Fetch workflow script from projects
          env:
             github-token: ${{ secrets.GIT_ACTIONS }}
          run: |
            git clone https://github.com/cs1867/project.git project
            cp project/toolbox/workflows/create-el-repo.sh .
         
        - name: Download artifacts
          run: |
            mkdir -p artifacts
             
              echo "Downloading artifact for i2util"
              run_id=16295432359
              echo "rund id $run_id"
              gh run download $run_id --repo cs1867/i2util -D artifacts/i2util --name "i2util-el9" 
              artifact_path="artifacts/i2util"
              pwd 
              echo "list artifact path"
              ls -al "$artifact_path"
              mkdir -p artifacts/RPMS
              echo "copy to the artifacts RPM dir"
              cp "$artifact_path"/RPMS/*.rpm artifacts/RPMS
          env:
            GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS }}

        - name: Use prebuilt RPM
          run: |
            mkdir -p rpms
            cp artifacts/RPMS/*.rpm rpms/
            ls -al rpms
            
        - name: Write secrets to files
          run: |
            echo "${{ secrets.GPG_PRIVATE_KEY }}" > private.key
            echo "${{ secrets.GPG_PASSPHRASE }}" | tr -d '\r\n' > passphrase.txt
            chmod 600 private.key passphrase.txt
            echo "==> Passphrase bytes (hex):"
            xxd passphrase.txt



        - name: Import GPG key
          run: |
            gpg --batch --import private.key
            KEYID=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/ { print $5; exit }')
            echo "KEYID=$KEYID" >> $GITHUB_ENV
            
     #   - name: Sign RPM
     #     run: |
     #      echo "%_gpg_name $KEYID" > ~/.rpmmacros
     #      echo "%_signature gpg" >> ~/.rpmmacros
     #      echo "%_gpg_path ~/.gnupg" >> ~/.rpmmacros
     #      echo "%_gpgbin /usr/bin/gpg" >> ~/.rpmmacros
     #      echo "%__gpg_sign_cmd /bin/sh -c 'exec %{_gpgbin} --batch --yes --pinentry-mode loopback --passphrase-file passphrase.txt -u %{_gpg_name} -sbo \"\$1\" \"\$2\"' gpg-sign" >> ~/.rpmmacros

     #      echo "can the key sign?"
      #     gpg --list-secret-keys --with-colons

      #     echo "==> Before signing:"
      #     rpm --checksig rpms/*.rpm || true

     #      echo "==> Signing RPM(s)..."
     #      rpm --addsign rpms/*.rpm
     #      echo "==> GPG sign command stderr:"
     #      cat /tmp/sign.err || echo "(no error output)"
     #      echo "==> After signing:"
      #     rpm --checksig rpms/*.rpm

           
        - name: list files
          run: |      
            pwd
            echo "list artifacts dir"
            ls -al artifacts
            echo "list artifacts RPM dir"
            ls -al artifacts/RPMS
            # Write variables to the file
            file="variables.txt"
            echo "repo=i2util" > $file
            echo "build_branch=5.2.0" >> $file 
            echo "el_version=9" >> $file
            echo "os_dir=el" >> $file
            curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build \
            | sh -s - --run create-el-repo.sh . "el9" 

        - name: Sign RPMs using docker-oneshot-signer
          run: |

            chmod 600 private.key passphrase.txt
            ls -l private.key passphrase.txt
 

 
            
            if [ -d "./artifacts/RPMS/repodata" ]
            then
              REPO_TYPE=rpm
              echo "RPM REPO FOUND"
            elif false
            then
              REPO_TYPE=deb
              echo "DEB REPO FOUND"
            else
              die "${REPO_DIR_ARG}: Unable to identify repository type."
            fi
            
            
            echo "Call docker oneshot signer"
                   
            curl -s https://raw.githubusercontent.com/cs1867/docker-oneshot-signer/main/sign \
            | sh -s - --passphrase passphrase.txt ./artifacts/RPMS '70E4925D5082A13835293254FCA368738AB65C0C'
          
            echo "Verifying signed RPMs..."
            gpg --list-keys
            rpm --checksig artifacts/RPMS/*.rpm

       # - uses: actions/upload-artifact@v4
       #   with:
       #    name: ${{ github.event.repository.name }}-${{ env.BUILD_OS }}
       #    path: artifacts
       #    retention-days: 5
           
     
