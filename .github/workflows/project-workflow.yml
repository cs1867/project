name: project-workflow
 
on: 
  workflow_dispatch:
    inputs: 
      OS:
        description: 'OS to build on'
        required: true
      BUILD_VARS_JSON:
        description: 'Build var json file'
        required: true
  workflow_run:
    workflows: "Gather artifacts for push to repo"
    branches: 'github-workflow'
    types:
      - completed      
 
jobs:
       
  build-project:

 
    runs-on: ubuntu-latest

    steps:
        - name: Check out Repo
          uses: actions/checkout@v4
          with:
            ref: 5.2.0
            
        - name: Fetch workflow script from projects
          env:
             github-token: ${{ secrets.GIT_ACTIONS }}
          run: |
            git clone https://github.com/cs1867/project.git project
            cp project/toolbox/workflows/github-workflow.sh .    
        
        - name: Pretty-print BUILD_VARS_JSON
          run: |
            echo '${{ github.event.inputs.BUILD_VARS_JSON }}'
            
        - name: Extract dependencies
          id: extract_deps
          run: |
            echo '${{ github.event.inputs.BUILD_VARS_JSON }}' | jq -r '.repos[] | select(.name == "${{ github.event.repository.name }}") | .deps[]' > deps.txt
            echo "Dependencies:"
            cat deps.txt
            
        - name: Download artifacts
          run: |
            mkdir -p artifacts
            while IFS= read -r repo; do
              echo "Downloading artifact for $repo"
              run_id=$(echo '${{ github.event.inputs.BUILD_VARS_JSON }}' | jq -r ".buildids | .[\"$repo\"]")
              echo "rund id $run_id"
              gh run download $run_id --repo cs1867/$repo -D artifacts/$repo --name "$repo-${{ github.event.inputs.OS }}"  
              artifact_path="artifacts/$repo"
              echo "list artifact path"
              ls -al "$artifact_path"
              mkdir -p artifacts/RPMS
              echo "copy to the artifacts RPM dir"
              cp "$artifact_path"/RPMS/*.rpm artifacts/RPMS
            done < deps.txt
          env:
            GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS }}
