name: oneshot-scripted-build

on: 
  workflow_call:
    inputs:
      BUILD_VARS_JSON:
        required: true
        type: string 
      BUILD_OS:
        required: true
        type: string
      BUILD_TYPE:
        required: true
        type: string
      BUILD_BRANCH:
        required: true
        type: string  
    secrets:
      GIT_ACTIONS:
        required: true

jobs:
  ed-build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GIT_ACTIONS }}
      
    steps:
      - name: Show variables
        run: |
          echo "BUILD_OS: ${{ inputs.BUILD_OS }}"
          echo "BUILD_TYPE: ${{ inputs.BUILD_TYPE }}"
          echo "BUILD_BRANCH: ${{ inputs.BUILD_BRANCH }}"
          echo "JSON: ${{ inputs.BUILD_VARS_JSON }}"  
          
      - name: Check out Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.BUILD_BRANCH }}
          
      - name: Fetch workflow script from projects
        env:
          github-token: ${{ secrets.GIT_ACTIONS }}
          REPO_NAME: ${{ github.event.repository.name }}
          
        run: |
            git clone https://github.com/cs1867/project.git project
            case '${{ inputs.BUILD_OS }}' in
              'ol8'|'el9')
                if [ "$REPO_NAME" = "host-metrics" ] ; then
                  echo "Using skip.sh for $REPO_NAME on $OS"
                  SCRIPT_NAME="github-workflow-el-skip-install.sh"
                else
                  echo "Using github-el-workflow.sh for $REPO_NAME on $OS"
                  SCRIPT_NAME="github-el-workflow.sh"
                fi
                 ;;
              'd11'|'d12'|'u20'|'u22'|'u24')
                if [ "$REPO_NAME" = "junk" ] ; then
                  echo "github-workflow-ub-skip-install.sh for $REPO_NAME on $OS"
                  SCRIPT_NAME="github-workflow-ub-skip-install.sh"
                else
                  echo "Using github-ub-workflow.sh for $REPO_NAME on $OS"
                  SCRIPT_NAME="github-ub-workflow.sh"
                fi
                ;;
            esac
            echo "Using $SCRIPT_NAME for $REPO_NAME on $OS"
            cp "project/toolbox/workflows/$SCRIPT_NAME" .

    
      - name: Create a temporary artifact downloads folder
        run: mkdir aritfacts
        
      - name: Extract dependencies
        id: extract_deps
        run: |
         echo '${{ inputs.BUILD_VARS_JSON }}' > input.json
         REPO_NAME="${{ github.event.repository.name }}"
         cat input.json | jq -r ".repos[] | select(.name == \"${REPO_NAME}\") | .deps[]" > deps.txt
         echo "Dependencies:"
         cat deps.txt
            
            
      - name: Download artifacts
        run: |
          mkdir -p artifacts
          BUILD_VARS_JSON='${{ inputs.BUILD_VARS_JSON }}'
          echo "::debug::GH_TOKEN=${GH_TOKEN:0:4}********"
          while IFS= read -r repo; do
            echo "Downloading artifact for '$repo'"
            run_id=$(echo "$BUILD_VARS_JSON" | jq -r ".buildids[\"$repo\"]")
            echo "run id: $run_id"  
            if [ -z "$GH_TOKEN" ]; then
             echo "❌ GH_TOKEN is not set!"
            else
             echo "✅ GH_TOKEN is set (length: ${#GH_TOKEN})"
            fi

            gh run download "$run_id" --repo cs1867/"$repo" -D artifacts/"$repo" --name "$repo-${{ inputs.BUILD_OS }}"

            artifact_path="artifacts/$repo"
            echo "Listing artifact path:"
            ls -al "$artifact_path"

           case '${{ inputs.BUILD_OS }}' in
            'ol8'|'el9')
              mkdir -p artifacts/RPMS
              echo "Copying RPMs to artifacts/RPMS"
              cp "$artifact_path"/RPMS/*.rpm artifacts/RPMS
            ;;
            'd11'|'d12'|'u20'|'u22'|'u24')
              mkdir -p artifacts/DEBS
              echo "Copying DEBs to artifacts/DEBS"
              cp -r "$artifact_path"/* artifacts/DEBS
              echo "Listing contents of DEBS dir"
              ls -al artifacts/DEBS/*
            ;;
            esac
          done < deps.txt
           

      - name: run docker oneshot builder and github-actions-workflow.sh
        run: |
          curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - --run "$SCRIPT_NAME"  . '${{ inputs.BUILD_OS }}'
            
            #  case "${{ inputs.BUILD_OS }}" in
            #    'ol8'|'el9')              
            #       curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - --run "$SCRIPT_NAME"  . '${{ inputs.BUILD_OS }}'  
            #    ;;
            #    'd11'|'d12'|'u20'|'u22'|'u24')                
            #     curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - --run github-db-workflow.sh . '${{ inputs.BUILD_OS }}'
            #    ;;
            #  esac
      
      - uses: actions/upload-artifact@v4
        with:
           name: ${{ github.event.repository.name }}-${{ inputs.BUILD_OS }}
           path: unibuild-repo
           retention-days: 5
       
