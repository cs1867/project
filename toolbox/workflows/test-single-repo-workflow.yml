# this file can be used to test a single repo build and avoid 
# having to build all prevouse repos in the flow
# this requires to update the test-data.json with the repo that 
# needs to be tested and valid run ids of any dependancies


name: test-workflow
        
on:  
  push:
    branches: [ 'github-workflow' ] 
  workflow_run:
    workflows: "Create Artifacts and pass runid"   
    branches: [ 'github-workflow' ]    
    types:   
      - completed       
  workflow_dispatch: 
env: 
  RUN_ID: ${{ github.run_id }}
 
jobs:
       
  build-testing:
     strategy:
      #fail-fast: true
      matrix:
          #os: [  'd12'  ]
          #os: [  'ol8', 'el9', 'd10', 'u18', 'u20'  ]
          os: [ 'ol8'   ]
     runs-on: ubuntu-latest

     steps:
        - name: Check out Repo
          uses: actions/checkout@v4
          with:
           ref: 5.2.0

        - name: Fetch build_vars.json from projects
          env:
             github-token: ${{ secrets.GIT_ACTIONS }}
          run: |
            git clone https://github.com/cs1867/project.git project
            ls -al project
            cp project/toolbox/workflows/toolkit_test.json .
 
        - name: Set build_vars.json as workflow variable
          id: set_build_vars
          run: |
           BUILD_VARS_JSON=$(jq -c . toolkit_test.json )
           echo "BUILD_VARS_JSON=${BUILD_VARS_JSON}" >> $GITHUB_ENV
           echo "BUILD_VARS_JSON=${BUILD_VARS_JSON}"
        
        - name:  cat toolkit_test.json 
          run: |
            cat toolkit_test.json 
            
        - name: Extract dependencies
          id: extract_deps
          run: |
            cat toolkit_test.json  | jq -r '.repos[] | select(.name == "${{ github.event.repository.name }}") | .deps[]' > deps.txt
            echo "Dependencies:"
            cat deps.txt
            
        - name: Download artifacts
          run: |
            mkdir -p artifacts
            cat deps.txt
            while IFS= read -r repo; do
              echo "Downloading artifact for $repo"
              run_id=$(cat toolkit_test.json  | jq -r ".buildids | .[\"$repo\"]")
              echo "rund id $run_id"
              echo "repo $repo"
              gh run download $run_id --repo cs1867/$repo -D artifacts/$repo --name "$repo-${{ matrix.os }}"  
              artifact_path="artifacts/$repo"
              echo "list artifact path"
              ls -al "$artifact_path"
              mkdir -p artifacts/RPMS
              echo "copy to the artifacts RPM dir"
              cp "$artifact_path"/RPMS/*.rpm artifacts/RPMS
            done < deps.txt
          env:
            GITHUB_TOKEN: ${{ secrets.GIT_ACTIONS }}
           
        - name: run docker oneshot builder
          run: |
           curl -s https://raw.githubusercontent.com/perfsonar/docker-oneshot-builder/main/build | sh -s - . '${{ matrix.os }}'
       
        - uses: actions/upload-artifact@v3
          with:
            name: ${{ github.event.repository.name }}-${{ matrix.os }}
            path: unibuild-repo
            retention-days: 5


            
  
           
